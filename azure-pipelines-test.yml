trigger:
- '*'
pool:
  vmImage: 'windows-2022'
variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'



jobs:
- job: Build_SqlQueryTools
  displayName: 'Build latest SqlQueryTools commit'
  steps:

  - task: PowerShell@2
    name: CurrentVsixManifest
    displayName: 'Read current vsix version from manifest file'
    inputs:
      targetType: 'inline'
      script: |
        $vsixManifestPath = Resolve-Path $(Build.SourcesDirectory)\src\SqlQueryTools\source.extension.vsixmanifest
        [xml]$vsixManifestContent = Get-Content $vsixManifestPath
        $vsixVersion = $vsixManifestContent.PackageManifest.Metadata.Identity.Version
        echo "Found vsix version = $vsixVersion"
        echo "##vso[task.setvariable variable=VsixVersion;isOutput=true]$vsixVersion"

  - task: DownloadGitHubRelease@0
    displayName: 'Download the latest release from GitHub'
    inputs:
      connection: 'github release connection'
      userRepository: 'gmarginet/SqlQueryTools'
      defaultVersionType: 'latest'
      itemPattern: '**/*.vsix'
      downloadPath: '$(Build.StagingDirectory)/PreviousGitHubRelease'

  - task: ExtractFiles@1
    displayName: 'Extract the latest release'
    inputs:
      archiveFilePatterns: '$(System.ArtifactsDirectory)/PreviousGitHubRelease/*.vsix'
      destinationFolder: '$(System.ArtifactsDirectory)/PreviousGitHubRelease/Content'
      cleanDestinationFolder: true
      overwriteExistingFiles: false

  - task: PowerShell@2
    name: PreviousVsixManifest
    displayName: 'Read previous vsix version from manifest file'
    inputs:
      targetType: 'inline'
      script: |
        $vsixManifestPath = Resolve-Path $(System.ArtifactsDirectory)\PreviousGitHubRelease\Content\extension.vsixmanifest
        [xml]$vsixManifestContent = Get-Content $vsixManifestPath
        $vsixVersion = $vsixManifestContent.PackageManifest.Metadata.Identity.Version
        echo "Found vsix version = $vsixVersion"
        echo "##vso[task.setvariable variable=VsixVersion;isOutput=true]$vsixVersion"



- job: Deploy_SqlQueryTools
  displayName: 'Deploy latest SqlQueryTools commit'
  dependsOn:
  - Build_SqlQueryTools
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), ne(dependencies.Build_SqlQueryTools.outputs['CurrentVsixManifest.VsixVersion'], dependencies.Build_SqlQueryTools.outputs['PreviousVsixManifest.VsixVersion']), eq('1', '2'))
  steps:

  - task: PowerShell@2
    displayName: 'tmp'
    inputs:
      targetType: 'inline'
      script: |
        echo "Deploy"
