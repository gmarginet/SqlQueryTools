trigger:
- '*'

pool:
  vmImage: 'windows-2022'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
- job: Build
  steps:
  - powershell: |
      $vsixManifestPath = Resolve-Path $(Build.SourcesDirectory)\src\SqlQueryTools\source.extension.vsixmanifest
      Write-Host "vsixManifestPath = $vsixManifestPath"
      [xml]$vsixManifestContent = Get-Content $vsixManifestPath
      $vsixVersion = $vsixManifestContent.PackageManifest.Metadata.Identity.Version
      Write-Host "vsixVersion = $vsixVersion"
      Write-Host "##vso[task.setvariable variable=MyVsixVersion;]$vsixVersion"
    displayName: 'Read vsix version from manifest file'
  - powershell: |
      Write-Host "myVsixVersion = $(MyVsixVersion)"
      $buildInfo = @{
        VsixVersion = $(MyVsixVersion)
      }
      $buildInfo | ConvertTo-Json  | Out-File "$(Build.ArtifactStagingDirectory)\BuildInfo.json"
    displayName: 'Create BuildInfo.json'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifact'
    inputs:
      artifactName: 'drop'
      TargetPath: '$(Build.ArtifactStagingDirectory)'
- job: Deploy
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'master'))
  steps:
  - task: DownloadBuildArtifacts@1
    displayName: 'Download artifact'
    inputs:
      artifactName: 'drop'
      downloadPath: '$(System.ArtifactsDirectory)'
  - powershell: |
      $buildInfoJsonPath = Resolve-Path $(System.ArtifactsDirectory)\drop\BuildInfo.json
      Write-Host "buildInfoJsonPath = $buildInfoJsonPath"
      $buildInfo = Get-Content $buildInfoJsonPath | ConvertFrom-Json
      Write-Host "vsixVersion = $($buildInfo.VsixVersion)"
    displayName: 'Read BuildInfo.json'
